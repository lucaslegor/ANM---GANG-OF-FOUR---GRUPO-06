name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  PROJECT_DIR: cifras_significativas

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ env.PROJECT_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: ./${{ env.PROJECT_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      # Usa tu next.config.cjs con output:'export'
      - name: Build
        run: npm run build

      # Debug √∫til
      - name: Show build output (debug)
        run: |
          echo "PWD:" && pwd
          echo "== listing =="
          ls -la
          echo "== next.config.cjs =="
          sed -n '1,200p' next.config.cjs || true
          echo "== .next =="
          ls -la .next || true
          echo "== .next/server/app (html) =="
          find .next/server/app -name 'index.html' -maxdepth 5 2>/dev/null | sed 's/^/ - /' || true
          echo "== out (si existe) =="
          ls -la out || true
          echo "== public (si existe) =="
          ls -la public || true

      # Fallback: si no existe out/, lo sintetizamos desde .next
      - name: Synthesize out/ if missing (fallback)
        run: |
          if [ ! -d "out" ]; then
            echo "‚ö†Ô∏è  out/ no existe; lo generamos desde .next/"
            mkdir -p out
            # Copiamos assets est√°ticos
            if [ -d "public" ]; then
              rsync -a public/ out/
            fi
            if [ -d ".next/static" ]; then
              mkdir -p out/_next/static
              rsync -a .next/static/ out/_next/static/
            fi
            # Copiamos HTML prerenderizado del App Router
            if [ -d ".next/server/app" ]; then
              rsync -a --prune-empty-dirs \
                --include '*/' --include 'index.html' --exclude '*' \
                .next/server/app/ out/
            fi
            echo "üì¶ Contenido final de out/:"
            find out -maxdepth 5 -type f | sed 's/^/ - /' | head -n 200
          else
            echo "‚úÖ out/ ya existe; no hace falta fallback."
          fi

      # Verificaci√≥n final
      - name: Ensure out/ exists
        run: |
          if [ ! -d "out" ]; then
            echo "‚ùå No se gener√≥ ./out ni con fallback."
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./${{ env.PROJECT_DIR }}/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
